{"version":3,"sources":["components/Comments/Comments.module.css","components/Replies/Reply.module.css","components/Compose/Compose.module.css","services/users.js","redux/actionTypes.js","redux/users.js","hooks/useUsers.js","services/comments.js","redux/comments.js","hooks/useComments.js","components/Compose/Compose.js","services/replies.js","redux/replies.js","hooks/useReplies.js","components/Replies/Reply.js","components/Replies/ReplyList.js","components/Comments/Comment.js","components/Comments/CommentList.js","components/App/index.js","redux/index.js","index.js"],"names":["module","exports","getUsers","a","Axios","get","res","users","data","FETCH_COMMENTS","FETCH_REPLIES","fetchUsersSagaWorker","selectUserSagaWorker","usersSagaWatcher","fetchUsersSuccess","type","payload","initialState","isFetching","selectedUserId","call","UsersService","put","error","action","value","takeLatest","usersSelector","state","useUsers","dispatch","useDispatch","useSelector","useEffect","selectUser","userId","getComments","comments","createComment","content","post","user_id","comment","fetchCommentsSagaWorker","createCommentSagaWorker","setContentSageWorker","commentsSagaWatcher","fetchCommentsSuccess","CommentsService","actionTypes","commentsSelector","useComments","_createComment","setCommentContent","Compose","textareaRef","useRef","autosize","current","length","setUserId","id","useState","setContent","handleSubmit","useCallback","e","preventDefault","alert","className","styles","compose","compose__heading","compose__body","onSubmit","ref","rows","placeholder","required","autoFocus","onChange","target","htmlFor","parseInt","map","user","key","name","compose__button","getReplies","replies","createReply","commentId","comment_id","reply","fetchRepliesSagaWorker","createReplySagaWorker","repliesSagaWatcher","fetchRepliesSuccess","RepliesService","repliesSelector","useReplies","_createReply","Reply","props","reply__header","reply__heading","i","getUserName","comment_timestamp","Intl","DateTimeFormat","dateStyle","timeStyle","format","Date","created_at","reply__body","ReplyList","sort","b","filter","Comment","add","setAdd","save","setSave","filterUser","new_users","comment__header","comment__heading","comment__body","add_reply_button","onClick","comment__textarea","save_reply_button","CommentList","App","reducer","combineReducers","sagas","CommentsStore","UsersStore","RepliesStore","sagaMiddleware","createSagaMiddleware","store","createStore","AppStore","applyMiddleware","forEach","saga","run","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.681b2374.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments-header\":\"Comments_comments-header__1SR78\",\"comments\":\"Comments_comments__l4vdx\",\"comment\":\"Comments_comment__2pQo-\",\"comment__header\":\"Comments_comment__header__3tf3a\",\"comment__heading\":\"Comments_comment__heading__2eXbd\",\"comment_timestamp\":\"Comments_comment_timestamp__3YOTt\",\"comment__body\":\"Comments_comment__body__oeMdY\",\"comment__textarea\":\"Comments_comment__textarea__26Fcg\",\"comment__row\":\"Comments_comment__row__3VD_6\",\"comment__icon_div\":\"Comments_comment__icon_div__3guXt\",\"comment__text_div\":\"Comments_comment__text_div__2Jtk6\",\"add_reply_button\":\"Comments_add_reply_button__1BgiV\",\"save_reply_button\":\"Comments_save_reply_button__dD7iV\",\"comment__dropdown\":\"Comments_comment__dropdown__2bwd7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reply-header\":\"Reply_reply-header__1Giz3\",\"reply\":\"Reply_reply__2orIj\",\"reply__header\":\"Reply_reply__header__3QYRh\",\"reply__heading\":\"Reply_reply__heading__2P_Q5\",\"reply_timestamp\":\"Reply_reply_timestamp__1jw-7\",\"reply__body\":\"Reply_reply__body__nrBQR\",\"reply__row\":\"Reply_reply__row__1ZYn1\",\"reply__icon_div\":\"Reply_reply__icon_div__27vaC\",\"reply__text_div\":\"Reply_reply__text_div__3gz1-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"compose\":\"Compose_compose__1vYmg\",\"compose__heading\":\"Compose_compose__heading__1vdqT\",\"compose__body\":\"Compose_compose__body__2IdV1\",\"compose__textarea\":\"Compose_compose__textarea__2gflR\",\"compose__dropdown\":\"Compose_compose__dropdown__2pmBs\",\"compose__button\":\"Compose_compose__button__1udEb\"};","import Axios from \"axios\";\r\n\r\nexport async function getUsers() {\r\n  const res = await Axios.get(\"/users\");\r\n  const users = res.data;\r\n  return users;\r\n}\r\n","\r\nexport const FETCH_USERS =  `users/FETCH_USERS`;\r\nexport const FETCH_USERS_SUCCESS = `users/FETCH_USERS_SUCCESS`;\r\nexport const FETCH_USERS_FAILURE = `users/FETCH_USERS_FAILURE`;\r\nexport const SELECT_USER = 'SELECT_USER';\r\nexport const FETCH_COMMENTS = `comments/FETCH_COMMENTS`;\r\nexport const FETCH_COMMENTS_SUCCESS = `comments/FETCH_COMMENTS_SUCCESS`;\r\nexport const FETCH_COMMENTS_FAILURE = `comments/FETCH_COMMENTS_FAILURE`;\r\nexport const CREATE_COMMENT = `comments/CREATE_COMMENT`;\r\nexport const SET_COMMENT_CONTENT = `SET_COMMENT_CONTENT`;\r\nexport const FETCH_REPLIES = `replies/FETCH_REPLIES`;\r\nexport const FETCH_REPLIES_SUCCESS = `replies/FETCH_REPLIES_SUCCESS`;\r\nexport const FETCH_REPLIES_FAILURE = `replies/FETCH_REPLIES_FAILURE`;\r\nexport const CREATE_REPLY = `replies/CREATE_REPLY`;","import { call, put, takeLatest } from \"redux-saga/effects\";\r\n\r\nimport * as UsersService from \"../services/users\";\r\nimport * as actionTypes from './actionTypes'\r\n\r\n////--------------Functions---------------/////////\r\nexport function fetchUsers() {\r\n  return {\r\n    type: actionTypes.FETCH_USERS,\r\n  };\r\n}\r\n\r\nexport function fetchUsersSuccess(users) {\r\n  return {\r\n    type: actionTypes.FETCH_USERS_SUCCESS,\r\n    payload: users,\r\n  };\r\n}\r\n\r\nexport function fetchUsersFailure(error) {\r\n  return {\r\n    type: actionTypes.FETCH_USERS_FAILURE,\r\n    payload: error,\r\n    error: true,\r\n  };\r\n}\r\n\r\nconst initialState = {\r\n  isFetching: false,\r\n  users: [],\r\n  selectedUserId:null\r\n};\r\n\r\nexport function selectUser(userId){\r\n  \r\n  return{\r\n    type:actionTypes.SELECT_USER,\r\n    payload:userId\r\n  }\r\n}\r\n//////////-------------Reducer--------------/////////////\r\nexport function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actionTypes.FETCH_USERS:\r\n      return {\r\n        ...state,\r\n        isFetching: true,\r\n      };\r\n    case actionTypes.FETCH_USERS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        users: action.payload,\r\n      };\r\n    case actionTypes.FETCH_USERS_FAILURE:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n      };\r\n    case actionTypes.SELECT_USER:\r\n      \r\n      return {\r\n        ...state,\r\n        selectedUserId:action.userId\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n/////////-----------SagaWorker------------////////////\r\nfunction* fetchUsersSagaWorker() {\r\n  try {\r\n    const users = yield call(UsersService.getUsers);\r\n    yield put(fetchUsersSuccess(users));\r\n  } catch (e) {\r\n    yield put(fetchUsersFailure(e));\r\n  }\r\n}\r\nfunction* selectUserSagaWorker(action){\r\n  yield put(actionTypes.SELECT_USER, action.value);\r\n}\r\n/////////---------SagaWatcher--------------///////////\r\nexport function* usersSagaWatcher() {\r\n  yield takeLatest(actionTypes.FETCH_USERS, fetchUsersSagaWorker);\r\n  yield takeLatest(actionTypes.SELECT_USER, selectUserSagaWorker);\r\n}\r\n\r\n\r\n///////-----------SagaSelector----------/////////\r\nexport function usersSelector(state) {\r\n  return state.users.users;\r\n}\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\n\r\nimport { fetchUsers, usersSelector} from \"../redux/users\";\r\n\r\nfunction useUsers() {\r\n  const dispatch = useDispatch();\r\n  const users = useSelector(usersSelector);\r\n  \r\n  useEffect(() => {\r\n    dispatch(fetchUsers());\r\n  }, [dispatch]);\r\n  const selectUser = (userId) =>\r\n    dispatch({type:\"SELECT_USER\", value:userId});\r\n  return { users, selectUser};\r\n}\r\n\r\nexport default useUsers;\r\n","import Axios from \"axios\";\r\n\r\nexport async function getComments() {\r\n  const res = await Axios.get(\"/comments\");\r\n  const comments = res.data;\r\n  return comments;\r\n}\r\n\r\nexport async function createComment(userId, content) {\r\n  const res = await Axios.post(\"/comments\", {\r\n    user_id: userId,\r\n    content: content,\r\n  });\r\n  const comment = res.data;\r\n  return comment;\r\n}\r\n","import { call, put, takeLatest } from \"redux-saga/effects\";\r\n\r\nimport * as CommentsService from \"../services/comments\";\r\n\r\nimport * as actionTypes from './actionTypes';\r\n\r\nexport function fetchComments() {\r\n  return {\r\n    type: actionTypes.FETCH_COMMENTS,\r\n  };\r\n}\r\n\r\nexport function fetchCommentsSuccess(comments) {\r\n  return {\r\n    type: actionTypes.FETCH_COMMENTS_SUCCESS,\r\n    payload: comments,\r\n  };\r\n}\r\n\r\nexport function fetchCommentsFailure(error) {\r\n  return {\r\n    type: actionTypes.FETCH_COMMENTS_FAILURE,\r\n    payload: error,\r\n    error: true,\r\n  };\r\n}\r\n\r\nexport function createComment(userId, content) {\r\n  return {\r\n    type: actionTypes.CREATE_COMMENT,\r\n    payload: {\r\n      userId,\r\n      content,\r\n    },\r\n  };\r\n}\r\n\r\nconst initialState = {\r\n  isFetching: false,\r\n  comments: [],\r\n  content:\"\",\r\n};\r\n\r\nexport function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actionTypes.FETCH_COMMENTS:\r\n      return {\r\n        ...state,\r\n        isFetching: true,\r\n      };\r\n    case actionTypes.FETCH_COMMENTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        comments: action.payload,\r\n      };\r\n    case actionTypes.FETCH_COMMENTS_FAILURE:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n      };\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction* fetchCommentsSagaWorker() {\r\n  try {\r\n    const comments = yield call(CommentsService.getComments);\r\n    yield put(fetchCommentsSuccess(comments));\r\n  } catch (e) {\r\n    yield put(fetchCommentsFailure(e));\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction* createCommentSagaWorker(action) {\r\n  const { userId, content } = action.payload;\r\n  yield call(CommentsService.createComment, userId, content);\r\n  yield call(fetchCommentsSagaWorker);\r\n}\r\nfunction* setContentSageWorker(action){\r\n  yield put(actionTypes.SET_COMMENT_CONTENT, action.value);\r\n}\r\n\r\nexport function* commentsSagaWatcher() {\r\n  yield takeLatest(actionTypes.FETCH_COMMENTS, fetchCommentsSagaWorker); \r\n  yield takeLatest(actionTypes.CREATE_COMMENT, createCommentSagaWorker);\r\n  yield takeLatest(actionTypes.SET_COMMENT_CONTENT,setContentSageWorker);\r\n}\r\n\r\nexport function commentsSelector(state) {\r\n  \r\n  return state.comments.comments;\r\n}\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\n\r\nimport {\r\n  fetchComments,\r\n  commentsSelector,\r\n  createComment as _createComment,\r\n} from \"../redux/comments\";\r\n\r\nfunction useComments() {\r\n  const dispatch = useDispatch();\r\n  const comments = useSelector(commentsSelector);\r\n \r\n  useEffect(() => {\r\n    dispatch(fetchComments());\r\n  }, [dispatch]);\r\n\r\n  const createComment = (userId, content) =>\r\n    dispatch(_createComment(userId, content));\r\n  \r\n  const setCommentContent = (content) =>{\r\n    dispatch({type:\"SET_COMMENT_CONTENT\",value:content})\r\n  }\r\n  \r\n\r\n  return { comments, createComment,setCommentContent };\r\n}\r\n\r\nexport default useComments;\r\n","import React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport styles from './Compose.module.css'\r\nimport useUsers from './../../hooks/useUsers'\r\nimport autosize from \"autosize\";\r\nimport useComments from \"../../hooks/useComments\";\r\n\r\n\r\n\r\nconst Compose = () =>{ \r\n    const { users } = useUsers();\r\n    const { createComment } = useComments();\r\n    const textareaRef = useRef();\r\n\r\n    useEffect(() => {\r\n      autosize(textareaRef.current);\r\n    }, []);\r\n  \r\n    useEffect(() => {\r\n      if (users.length) {\r\n        setUserId(users[0].id);\r\n      }\r\n    }, [users]);\r\n    const [userId, setUserId] = useState(null);\r\n    const [content, setContent] = useState(\"\");\r\n    const handleContentChange = (e) => setContent(e.target.value);\r\n  \r\n    const handleUserChange = (e) => setUserId(parseInt(e.target.value));\r\n  \r\n    const handleSubmit = useCallback(\r\n      (e) => {\r\n        e.preventDefault();\r\n        if (!userId) {\r\n          alert(\"No user selected\");\r\n          return;\r\n        }\r\n        \r\n        createComment(userId, content);\r\n        setContent(\"\");\r\n      },\r\n      \r\n      [userId, content]\r\n    );\r\n    return(\r\n        <div className={styles.compose}>\r\n            <h2 className={styles.compose__heading}>You say...</h2>\r\n            <form className={styles.compose__body} onSubmit={handleSubmit}>\r\n            <textarea\r\n                ref={textareaRef}\r\n                rows={4}\r\n                placeholder=\"Enter some text\"\r\n                required\r\n                autoFocus\r\n                value={content}\r\n                onChange={handleContentChange}\r\n                className=\"compose__textarea\"\r\n            />\r\n            <div className=\"compose__dropdown\">\r\n                <label htmlFor=\"user-select\">Comment as</label>\r\n                <select\r\n                id=\"user-select\"\r\n                onChange={handleUserChange}\r\n                className=\"dropdown\"\r\n                >\r\n                {users.map((user) => (\r\n                    <option key={user.id} value={user.id}>\r\n                    {user.name}\r\n                    </option>\r\n                ))}\r\n                </select>\r\n            </div>\r\n            <div className={styles.compose__button}>\r\n                <button className=\"button button--primary\">Submit</button>\r\n            </div>\r\n            </form>\r\n      </div>   \r\n    )\r\n}\r\n\r\n\r\nexport default Compose;\r\n","import Axios from \"axios\";\r\n\r\nexport async function getReplies() {\r\n  const res = await Axios.get(\"/replies\");\r\n  const replies = res.data;\r\n  return replies;\r\n}\r\n\r\nexport async function createReply(userId,commentId, content) {\r\n  \r\n  const res = await Axios.post(\"/replies\", {\r\n    user_id: userId,\r\n    comment_id: commentId,\r\n    content: content,\r\n  });\r\n  const reply = res.data;\r\n  return reply;\r\n}\r\n","import { call, put, takeLatest } from \"redux-saga/effects\";\r\n\r\nimport * as RepliesService from \"../services/replies\";\r\n\r\nimport * as actionTypes from './actionTypes';\r\n\r\nexport function fetchReplies() {\r\n  return {\r\n    type: actionTypes.FETCH_REPLIES,\r\n  };\r\n}\r\n\r\nexport function fetchRepliesSuccess(replies) {\r\n  return {\r\n    type: actionTypes.FETCH_REPLIES_SUCCESS,\r\n    payload: replies,\r\n  };\r\n}\r\n\r\nexport function fetchRepliesFailure(error) {\r\n  return {\r\n    type: actionTypes.FETCH_REPLIES_FAILURE,\r\n    payload: error,\r\n    error: true,\r\n  };\r\n}\r\n\r\nexport function createReply(userId, commentId, content) {\r\n    \r\n  return {\r\n    type: actionTypes.CREATE_REPLY,\r\n    payload: {\r\n        userId,\r\n        commentId,\r\n        content,\r\n    },\r\n  };\r\n}\r\n\r\nconst initialState = {\r\n  isFetching: false,\r\n  replies:[],\r\n};\r\n\r\nexport function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actionTypes.FETCH_REPLIES:\r\n      return {\r\n        ...state,\r\n        isFetching: true,\r\n      };\r\n      \r\n    case actionTypes.FETCH_REPLIES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        replies: action.payload,\r\n      };\r\n      \r\n    case actionTypes.FETCH_REPLIES_FAILURE:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n      };\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction* fetchRepliesSagaWorker() {\r\n  try {\r\n    const replies = yield call(RepliesService.getReplies);\r\n    yield put(fetchRepliesSuccess(replies));\r\n  } catch (e) {\r\n    yield put(fetchRepliesFailure(e));\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction* createReplySagaWorker(action) {\r\n  const { userId, commentId, content } = action.payload;\r\n  yield call(RepliesService.createReply, userId,commentId, content);\r\n  yield call(fetchRepliesSagaWorker);\r\n}\r\n\r\n\r\nexport function* repliesSagaWatcher() {\r\n  yield takeLatest(actionTypes.FETCH_REPLIES, fetchRepliesSagaWorker); \r\n  yield takeLatest(actionTypes.CREATE_REPLY, createReplySagaWorker);\r\n  \r\n}\r\n\r\nexport function repliesSelector(state) {\r\n  \r\n  return state.replies.replies;\r\n}\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\n\r\nimport {\r\n  fetchReplies,\r\n  repliesSelector,\r\n  createReply as _createReply,\r\n} from \"../redux/replies\";\r\n\r\nfunction useReplies() {\r\n  const dispatch = useDispatch();\r\n  const replies = useSelector(repliesSelector);\r\n  \r\n  useEffect(() => {\r\n    dispatch(fetchReplies());\r\n  }, [dispatch]);\r\n\r\n  const createReply = (userId, commentId, content) =>\r\n    dispatch(_createReply(userId, commentId, content));\r\n  \r\n  return { replies, createReply };\r\n}\r\n\r\nexport default useReplies;\r\n","import React from \"react\";\r\nimport styles from \"./Reply.module.css\";\r\nimport useUsers from './../../hooks/useUsers'\r\n\r\nconst Reply = (props) => {\r\n    const reply = props.reply;\r\n    const { users } = useUsers();\r\n    const getUserName = (reply)=>{\r\n        for(var i=0;i<users.length;i++){\r\n            if(users[i].id===reply.user_id)\r\n                return users[i].name;\r\n        }\r\n    }\r\n    return (\r\n        <div className={styles.reply}>\r\n            <header className={styles.reply__header}>\r\n                <h2 className={styles.reply__heading}>\r\n                    {getUserName(reply)} replied...\r\n                </h2>\r\n                <span className={styles.comment_timestamp}>\r\n                    {new Intl.DateTimeFormat(\"en-US\", {\r\n                        dateStyle: \"medium\",\r\n                        timeStyle: \"short\",\r\n                    }).format(new Date(reply.created_at))}\r\n                </span>\r\n            </header>\r\n            <p className={styles.reply__body}>{reply.content}</p>\r\n        </div>\r\n    )\r\n}\r\nexport default Reply;","import React from \"react\";\r\nimport useReplies from \"../../hooks/useReplies\";\r\nimport Reply from \"./Reply\";\r\n\r\n\r\nfunction ReplyList( props ){\r\n    const {replies} = useReplies();\r\n    \r\n    const getMyReplies = (reply) => {\r\n        return reply.comment_id === props.id\r\n    }\r\n    return(\r\n        <div>\r\n            \r\n            {\r\n                [...replies]\r\n                .sort((a, b) => new Date(b.created_at) - new Date(a.created_at))\r\n                .filter(getMyReplies)\r\n                .map((reply)=>{\r\n                    return <Reply reply={reply}/>\r\n                })\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\nexport default ReplyList;","import React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport styles from './Comments.module.css'\r\nimport autosize from \"autosize\";\r\nimport useUsers from './../../hooks/useUsers'\r\nimport useReplies from './../../hooks/useReplies';\r\nimport ReplyList from \"../Replies/ReplyList\";\r\n\r\n\r\nfunction Comment(props) {\r\n  const { users } = useUsers();\r\n  const { createReply } = useReplies();\r\n  const [add, setAdd] = useState(false)\r\n  const [content, setContent] = useState(\"\");\r\n  const [save, setSave] = useState(false);\r\n  const [userId,setUserId] = useState(null);\r\n\r\n  //Get the users who can leave reply\r\n  const filterUser = (user) => {\r\n    return user.id!==props.comment.user_id\r\n  }\r\n\r\n  useEffect(() => {\r\n  \r\n\r\n    if (users.length) {\r\n      var new_users = users.filter(filterUser);\r\n      setUserId(new_users[0].id);\r\n    }\r\n  }, [users,props.comment.user_id]);\r\n\r\n  //Toggle add reply \r\n  const handleAddClick = () => {\r\n    setAdd(!add)\r\n  }\r\n  //Set the content and show the save button\r\n  const handleContentChange = (e) => {\r\n    setContent(e.target.value);\r\n    (content.length-1)||(content===\"\")? setSave(true) : setSave(false);\r\n  }\r\n  const handleUserChange = (e) => setUserId(parseInt(e.target.value));\r\n\r\n  const handleSubmit = useCallback(\r\n    (e) => {\r\n      \r\n      if (!userId) {\r\n        alert(\"No user selected\");\r\n        return;\r\n      }\r\n      if(!content){\r\n        alert(\"No reply written\");\r\n        return\r\n      }\r\n      createReply(userId, props.comment.id, content);\r\n      setContent(\"\");\r\n      setAdd(false);\r\n    },\r\n    \r\n    [userId, content,props.comment.id,createReply]\r\n  );\r\n\r\n  const textareaRef = useRef();\r\n\r\n  useEffect(() => {\r\n    autosize(textareaRef.current);\r\n  }, []);\r\n  return (\r\n    <div key={props.comment.id} className={styles.comment}>\r\n      <header className={styles.comment__header}>\r\n        <h2 className={styles.comment__heading}>\r\n          {props.comment.user.name} says...\r\n                </h2>\r\n        <span className={styles.comment_timestamp}>\r\n          {new Intl.DateTimeFormat(\"en-US\", {\r\n            dateStyle: \"medium\",\r\n            timeStyle: \"short\",\r\n          }).format(new Date(props.comment.created_at))}\r\n        </span>\r\n      </header>\r\n      <p className={styles.comment__body}>{props.comment.content}</p>\r\n      <hr />\r\n      <div className=\"row\">\r\n        <button className={styles.add_reply_button} onClick={handleAddClick} ><i className=\"fa fa-comment\" /> Reply</button>\r\n        <br />\r\n        <br />\r\n        {add && (\r\n          <div>\r\n            <textarea\r\n              ref={textareaRef}\r\n              rows={1}\r\n              placeholder=\"Enter some text\"\r\n              required\r\n              autoFocus\r\n              onChange={handleContentChange}\r\n              value={content}\r\n              className={styles.comment__textarea}\r\n            />\r\n            <br />\r\n            <br />\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">\r\n                <div className=\"compose__dropdown\">\r\n                  <label htmlFor=\"user-select\">Comment as</label>\r\n                  <select\r\n                    id=\"user-select\"\r\n                    onChange={handleUserChange}\r\n                    className=\"dropdown\"\r\n                  >\r\n                    {users.filter(filterUser).map((user) => (\r\n                      <option key={user.id} value={user.id}>\r\n                        {user.name}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                {save && (\r\n                  <button className={styles.save_reply_button} onClick={handleSubmit}><i className=\"fa fa-save\" /> Save</button>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <br />\r\n      \r\n      <ReplyList id = {props.comment.id}/>          \r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Comment","import React from \"react\";\r\nimport styles from './Comments.module.css'\r\n\r\nimport useComments from \"../../hooks/useComments\";\r\nimport Comment from \"./Comment\"\r\n\r\n\r\nfunction CommentList(){\r\n    const { comments } = useComments();\r\n    \r\n    return(\r\n        <div className={styles.comments}>\r\n            {\r\n                [...comments]\r\n                .sort((a, b) => new Date(b.created_at) - new Date(a.created_at))\r\n                .map((comment)=>{\r\n                    return <Comment comment={comment} key={comment.id}/>\r\n                })\r\n            }\r\n        </div>\r\n    )  \r\n}\r\nexport default CommentList;","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Compose from '../Compose/Compose'\r\nimport CommetnList from '../Comments/CommentList'\r\n\r\nfunction App() {\r\n\r\n\r\n  return (\r\n    <div className=\"comments-container\">\r\n      <header className=\"comments-header\">\r\n        <h1>Comments</h1>\r\n      </header>\r\n      <Compose />\r\n      <CommetnList />\r\n     </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport * as UsersStore from \"./users\";\r\nimport * as CommentsStore from \"./comments\";\r\nimport * as RepliesStore from \"./replies\";\r\n\r\nexport const reducer = combineReducers({\r\n  comments: CommentsStore.reducer,\r\n  users: UsersStore.reducer,\r\n  replies: RepliesStore.reducer,\r\n});\r\n\r\nexport const sagas = [\r\n  CommentsStore.commentsSagaWatcher,\r\n  UsersStore.usersSagaWatcher,\r\n  RepliesStore.repliesSagaWatcher,\r\n];\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\n\r\nimport \"./index.css\";\r\nimport App from \"./components/App\";\r\nimport * as AppStore from \"./redux\";\r\n\r\n// Setup Redux store\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst store = createStore(AppStore.reducer, applyMiddleware(sagaMiddleware));\r\nAppStore.sagas.forEach((saga) => sagaMiddleware.run(saga));\r\n\r\n// Expose Redux store for debugging purposes\r\nwindow.store = store;\r\n\r\n// Render\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}